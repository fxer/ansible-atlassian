---
- name: Check JIRA Core version
  shell: grep -m 1 -o "[0-9]\+\.[0-9]\+\.[0-9]\+" {{ atlassian_jira_install_dir }}/README.txt
  register: found_jira_version
  always_run: True
  changed_when: found_jira_version.stdout != atlassian_jira_current_version

- name: Download JIRA installer
  get_url:
    url: "{{ atlassian_jira_download_url }}/{{ atlassian_jira_download_filename }}"
    dest: "{{ atlassian_tmp_dir }}/{{ atlassian_jira_download_filename }}"
    mode: 0775
  register: jira_downloaded
  when: found_jira_version.stdout != atlassian_jira_current_version

- name: Manually run JIRA installer
  debug:
    msg: "Downloaded JIRA installer, manually install via:
      sudo {{ atlassian_tmp_dir }}/{{ atlassian_jira_download_filename }}"
  when: jira_downloaded.changed

- name: Configure server.xml
  template:
    src: jira-server.xml.j2
    dest: "{{ atlassian_jira_install_dir }}/conf/server.xml"
    owner: root
    group: root
    mode: 0644
    backup: yes
  notify:
    - restart jira

- name: Configure setenv.sh
  lineinfile:
    dest: "{{ atlassian_jira_install_dir }}/bin/setenv.sh"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
    backup: yes
  with_items:
    - { regexp: '^#?JVM_MINIMUM_MEMORY=', line: "JVM_MINIMUM_MEMORY=\"{{ atlassian_jira_jvm_minimum_memory }}\"" }
    - { regexp: '^#?JVM_MAXIMUM_MEMORY=', line: "JVM_MAXIMUM_MEMORY=\"{{ atlassian_jira_jvm_maximum_memory }}\"" }
  notify:
    - restart jira
